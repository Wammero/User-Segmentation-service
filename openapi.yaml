openapi: 3.0.3
info:
  title: OpenApi 3.0
  version: 1.0.11
servers:
  - url: http:/localhost:8080/
tags:
  - name: segment
    description: Operation about segments
    externalDocs:
      description: Find out more
      url: http://swagger.io
  - name: user
    description: Operations about users
paths:
  /add-segment:
    post:
      tags:
        - segment
      summary: Add a new segment to the table
      description: Add a new segment to the table
      operationId: addSegment
      requestBody:
        description: Create a new segment in the table
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Pet'
        required: true
      responses:
        '200':
          description: Successful operation
        '400':
          description: Invalid input
      security:
        - petstore_auth:
            - write:pets
            - read:pets
  /update-segment/{segment_id}:
    put:
      tags:
        - segment
      summary: Update segment
      description: Update info about segment
      operationId: updateSegment
      parameters:
        - name: segment_id
          in: path
          description: name that need to be deleted
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        description: Update info about segment in the table
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Pet'
      responses:
        '200':
          description: Successful operation
        '400':
          description: Invalid input
  /get-segments:
    get:
      tags:
        - segment
      summary: Get all segments.
      description: Get all segments.
      operationId: GetAllSegments
      parameters:
        - name: tags
          in: query
          description: Tags to filter by
          required: false
          explode: true
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Pet'          
        '400':
          description: Invalid tag value
      security:
        - petstore_auth:
            - write:pets
            - read:pets
  /delete-segment/{segment_id}:
    delete:
      tags:
        - segment
      summary: Deletes a segment
      description: delete a segment
      operationId: deleteSegment
      parameters:
        - name: segment_id
          in: path
          description: Segment id to delete
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: successful operation
        '400':
          description: Invalid pet value
      security:
        - petstore_auth:
            - write:pets
            - read:pets
  /distribute-segment/{segment_id}:
    post:
      tags:
        - segment
      summary: distribute segment
      description: ''
      operationId: uploadFile
      parameters:
        - name: segment_id
          in: path
          description: Pet id to delete
          required: true
          schema:
            type: integer
            format: int64
        - name: percentage
          in: query
          description: Auto percentage for distribution
          required: false
          schema:
            type: number
            format: float
      responses:
        '200':
          description: successful operation
        '400':
          description: invalid arguments
        '404':
          description: not found
      security:
        - petstore_auth:
            - write:pets
            - read:pets
  /get-users:
    get:
      tags:
        - user
      summary: Get users with special segment
      description: 'Get users with special segment'
      operationId: GetUsersWithSegment
      parameters:
        - name: segment_id
          in: query        # Изменено на query, чтобы передавать параметр в URL, а не в path
          description: ID сегмента для фильтрации пользователей (опционально)
          required: false  # Теперь параметр не обязателен
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: successful operation
        '400':
          description: invalid arguments
      security:
        - petstore_auth:
            - write:pets
            - read:pets
  /add-user:
    post:
      tags:
        - user
      summary: Add a new user to the table
      description: Add a new user to the table
      operationId: addUser
      requestBody:
        description: Create a new user in the table
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      responses:
        '200':
          description: Successful operation
        '400':
          description: Invalid input
      security:
        - petstore_auth:
            - write:pets
            - read:pets
  /delete-user/{user_id}:
    delete:
      tags:
        - user
      summary: Deletes a user
      description: delete a user
      operationId: deleteUser
      parameters:
        - name: user_id
          in: path
          description: User id to delete
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: successful operation
        '400':
          description: Invalid pet value
      security:
        - petstore_auth:
            - write:pets
            - read:pets
  /add-user-to-segment/{user_id}:
    post:
      tags:
        - user
      summary: Add user to segment
      description: 'Add user to segment'
      operationId: Add user to segment
      parameters:
        - name: user_id
          in: path
          description: Add user to segment
          required: true
          schema:
            type: integer
            format: int64
        - name: segment_id
          in: query
          description: segment_id
          required: false
          schema:
            type: number
            format: float
      responses:
        '200':
          description: successful operation
        '400':
          description: invalid arguments
      security:
        - petstore_auth:
            - write:pets
            - read:pets
  /delete-user-from-segment/{user_id}:
    delete:
      tags:
        - user
      summary: Delete user from segment
      description: 'Delete user from segment'
      operationId: Delete user from segment
      parameters:
        - name: user_id
          in: path
          description: Delete user from segment
          required: true
          schema:
            type: integer
            format: int64
        - name: segment_id
          in: query
          description: segment_id
          required: false
          schema:
            type: number
            format: float
      responses:
        '200':
          description: successful operation
        '400':
          description: invalid arguments
      security:
        - petstore_auth:
            - write:pets
            - read:pets
            
components:
  schemas:
    User:
      type: object
      properties:
        username:
          type: string
          example: Mike
        email:
          type: string
          example: Mike@yandex.ru
      xml:
        name: user
    Pet:
      required:
        - name
        - photoUrls
      type: object
      properties:
        name:
          type: string
          example: MAIL_VOICE_MESSAGES
      xml:
        name: pet
  requestBodies:
    Pet:
      description: Pet object that needs to be added to the store
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Pet'
  securitySchemes:
    petstore_auth:
      type: oauth2
      flows:
        implicit:
          authorizationUrl: https://petstore3.swagger.io/oauth/authorize
          scopes:
            write:pets: modify pets in your account
            read:pets: read your pets